version: 2.1
jobs:
  build:
    docker:

      - image: circleci/php:7.3-fpm
      - image: circleci/mysql:5.7
    environment:
        - APP_DEBUG: true
        - APP_ENV: testing
        - APP_KEY: base64:CxIPfh57UZxLKUojcbA1qc8hHWgR4WCsrdsNG8ibwHE=
        - DB_CONNECTION: circleci
    steps:
      - checkout
      - run: sudo docker-php-ext-install pdo_mysql

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./src/composer.json" }}
            - v1-dependencies-

      - run:
          command: composer install -n --prefer-dist  
          working_directory: ./src

      - save_cache:
          key: v1-dependencies-{{ checksum "./src/composer.json" }}
          paths:
            - ./src/vendor

      - run: 
          command: php artisan migrate  --database=circleci --force
          working_directory: ./src

      - run:
          command: ./vendor/bin/phpunit
          working_directory: ./src


orbs:
  aws-ecr: circleci/aws-ecr@6.5.0
  aws-ecs: circleci/aws-ecs@0.0.10
workflows:
  build_and_deploy:
    jobs:
      - build
      - aws-ecr/build-and-push-image:
          path: ./docker/nginx/
          name: 'nginx_build'
          account-url: ECR_FORUM_NGINX
          repo: '${APP_PREFIX}-nginx'
          requires:
            - build
          filters:
            branches:
              only: master
      - aws-ecr/build-and-push-image:
          path: ./docker/php-fpm/
          name: 'php_build'
          account-url: ECR_FORUM_PHP
          repo: '${APP_PREFIX}-php'
          requires:
            - build
          filters:
            branches:
              only: master
      - aws-ecs/deploy-service-update:
          name: 'ecs-deploy'
          family: '${APP_PREFIX}-task'
          cluster-name: '${APP_PREFIX}-cluster'
          service-name: '${APP_PREFIX}-service'
          requires:
            - nginx_build
          filters:
            branches:
              only: master